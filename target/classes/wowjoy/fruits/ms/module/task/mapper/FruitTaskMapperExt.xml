<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wowjoy.fruits.ms.module.task.mapper.FruitTaskMapperExt">
    <resultMap id="BaseResultMap" type="wowjoy.fruits.ms.module.task.FruitTaskDao">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="task_status" jdbcType="VARCHAR" property="taskStatus"/>
        <result column="status_description" jdbcType="VARCHAR" property="statusDescription"/>
        <result column="task_level" jdbcType="VARCHAR" property="taskLevel"/>
        <result column="estimated_end_date" jdbcType="DATE" property="estimatedEndDate"/>
        <result column="end_date" jdbcType="DATE" property="endDate"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
        <result column="list_id" jdbcType="VARCHAR" property="listId"/>
        <association property="plan" resultMap="PlanResultMap" columnPrefix="plan_"/>
        <association property="project" resultMap="ProjectResultMap" columnPrefix="project_"/>
        <association property="list" resultMap="ListResultMap" columnPrefix="list_"/>
        <collection resultMap="UserResultMap" property="users" columnPrefix="user_"/>
        <collection property="logs" resultMap="LogsResultMap" columnPrefix="flogs_"/>
    </resultMap>

    <resultMap id="ProjectResultMap" type="wowjoy.fruits.ms.module.project.FruitProjectDao">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="project_status" jdbcType="VARCHAR" property="projectStatus"/>
        <result column="status_description" jdbcType="VARCHAR" property="statusDescription"/>
        <result column="predict_start_date" jdbcType="DATE" property="predictStartDate"/>
        <result column="predict_end_date" jdbcType="DATE" property="predictEndDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
    </resultMap>

    <resultMap id="UserResultMap" type="wowjoy.fruits.ms.module.user.FruitUserDao">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="user_sex" jdbcType="VARCHAR" property="userSex"/>
        <result column="job_title" jdbcType="VARCHAR" property="jobTitle"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
    </resultMap>

    <resultMap id="ListResultMap" type="wowjoy.fruits.ms.module.list.FruitListDao">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="l_type" jdbcType="VARCHAR" property="lType"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
    </resultMap>

    <resultMap id="PlanResultMap" type="wowjoy.fruits.ms.module.plan.FruitPlanDao">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="plan_status" jdbcType="VARCHAR" property="planStatus"/>
        <result column="status_description" jdbcType="VARCHAR" property="statusDescription"/>
        <result column="percent" jdbcType="INTEGER" property="percent"/>
        <result column="estimated_start_date" jdbcType="TIMESTAMP" property="estimatedStartDate"/>
        <result column="estimated_end_date" jdbcType="TIMESTAMP" property="estimatedEndDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
    </resultMap>

    <resultMap id="LogsResultMap" type="wowjoy.fruits.ms.module.logs.FruitLogsDao">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="fruit_uuid" jdbcType="VARCHAR" property="fruitUuid"/>
        <result column="fruit_type" jdbcType="VARCHAR" property="fruitType"/>
        <result column="json_object" jdbcType="LONGVARCHAR" property="jsonObject"/>
        <result column="operate_type" jdbcType="VARCHAR" property="operateType"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
    </resultMap>
    <sql id="Base_Example_Where_Clause">
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${replace}.${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${replace}.${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${replace}.${criterion.condition} #{criterion.value} and
                                #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${replace}.${criterion.condition}
                                <foreach close=")" collection="criterion.value" item="listItem" open="("
                                         separator=",">
                                    #{listItem}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </foreach>
    </sql>

    <sql id="Base_Column_List">
        ${replace}.uuid,
        ${replace}.title,
        ${replace}.task_status,
        ${replace}.status_description,
        ${replace}.task_level,
        ${replace}.estimated_end_date,
        ${replace}.end_date,
        ${replace}.description,
        ${replace}.modify_date_time,
        ${replace}.create_date_time,
        ${replace}.is_deleted
    </sql>

    <sql id="User_Column_List">
       ${replace}.uuid as ${prefix}uuid,
        ${replace}.user_id as ${prefix}user_id,
        ${replace}.user_name as ${prefix}user_name,
        ${replace}.birthday as ${prefix}birthday,
        ${replace}.user_email as ${prefix}user_email,
        ${replace}.user_sex as ${prefix}user_sex,
        ${replace}.job_title as ${prefix}job_title,
        ${replace}.description as ${prefix}description,
        ${replace}.modify_date_time as ${prefix}modify_date_time,
        ${replace}.create_date_time as ${prefix}create_date_time,
        ${replace}.is_deleted as ${prefix}is_deleted
    </sql>

    <sql id="user_Base_Column_List">
        uuid, user_id, user_name, birthday, user_email, user_sex, job_title, description,
        modify_date_time, create_date_time, is_deleted
    </sql>

    <sql id="Plan_Column_List">
        ${replace}.uuid as ${prefix}uuid,
        ${replace}.title as ${prefix}title,
        ${replace}.plan_status as ${prefix}plan_status,
        ${replace}.status_description as ${prefix}status_description,
        ${replace}.percent as ${prefix}percent,
        ${replace}.estimated_start_date as ${prefix}estimated_start_date,
        ${replace}.estimated_end_date as ${prefix}estimated_end_date,
        ${replace}.end_date as ${prefix}end_date,
        ${replace}.parent_id as ${prefix}parent_id,
        ${replace}.modify_date_time as ${prefix}modify_date_time,
        ${replace}.create_date_time as ${prefix}create_date_time,
        ${replace}.is_deleted as ${prefix}is_deleted,
        ${replace}.description as ${prefix}description
    </sql>

    <sql id="plan_Base_Column_List">
        uuid, title, plan_status, status_description, percent, estimated_start_date, estimated_end_date,
        end_date, parent_id, modify_date_time, create_date_time, is_deleted,description
    </sql>

    <sql id="Project_Column_List">
        ${replace}.uuid as ${prefix}uuid,
        ${replace}.title as ${prefix}title,
        ${replace}.project_status as ${prefix}project_status,
        ${replace}.status_description as ${prefix}status_description,
        ${replace}.predict_start_date as ${prefix}predict_start_date,
        ${replace}.predict_end_date as ${prefix}predict_end_date,
        ${replace}.end_date as ${prefix}end_date,
        ${replace}.description as ${prefix}description,
        ${replace}.modify_date_time as ${prefix}modify_date_time,
        ${replace}.create_date_time as ${prefix}create_date_time,
        ${replace}.is_deleted as ${prefix}is_deleted
    </sql>

    <sql id="Project_Base_Column_List">
        uuid, title, project_status, status_description, predict_start_date, predict_end_date,
        end_date, description, modify_date_time, create_date_time, is_deleted
    </sql>

    <sql id="List_Column_List">
        ${replace}.uuid as ${prefix}uuid,
        ${replace}.title as ${prefix}title,
        ${replace}.l_type as ${prefix}l_type,
        ${replace}.description as ${prefix}description,
        ${replace}.modify_date_time as ${prefix}modify_date_time,
        ${replace}.create_date_time as ${prefix}create_date_time,
        ${replace}.is_deleted as ${prefix}is_deleted
    </sql>
    <sql id="Logs_Column_List">
        ${replace}.uuid as ${prefix}uuid,
        ${replace}.user_id as ${prefix}user_id,
        ${replace}.fruit_uuid as ${prefix}fruit_uuid,
        ${replace}.fruit_type as ${prefix}fruit_type,
        ${replace}.json_object as ${prefix}json_object,
        ${replace}.operate_type as ${prefix}operate_type,
        ${replace}.modify_date_time as ${prefix}modify_date_time,
        ${replace}.create_date_time as ${prefix}create_date_time,
        ${replace}.is_deleted as ${prefix}is_deleted
    </sql>

    <select id="selectByTaskList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List">
            <property name="replace" value="task"/>
        </include>
        ,
        listRelation.list_id
        from fruits_task task
        right join
        (
          select task_id,list_id from task_list_relation
          where
            is_deleted = 'N'
            <if test="id != null">
                AND list_id = #{id}
            </if>
        ) listRelation on listRelation.task_id = task.uuid
        <trim prefixOverrides="ADN | OR" suffixOverrides="ADN | OR">
            <where>
                <include refid="Base_Example_Where_Clause">
                    <property name="replace" value="task"/>
                </include>
                AND task.is_deleted = 'N'
            </where>
        </trim>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>

    <select id="selectByTaskPlan" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List">
            <property name="replace" value="task"/>
        </include>
        from fruits_task task
        left join
        (
            select task_id from task_plan_relation
            where is_deleted = 'N'
            <if test="id != null">
                AND plan_id = #{id}
            </if>
        ) planRelation on planRelation.task_id = task.uuid
        <trim prefixOverrides="ADN | OR" suffixOverrides="ADN | OR">
            <where>
                AND task.is_deleted = 'N'
            </where>
        </trim>
        order by task.create_date_time desc
    </select>

    <select id="selectUserByTask" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List">
            <property name="replace" value="task"/>
        </include>
        ,
        <include refid="User_Column_List">
            <property name="replace" value="fuser"/>
            <property name="prefix" value="user_"/>
        </include>
        from fruits_task task
        RIGHT join (select task_id,user_id from task_user_relation where is_deleted='N') userRelation on userRelation.task_id = task.uuid
        RIGHT join (select <include refid="user_Base_Column_List"/> from fruits_user where is_deleted = 'N') fuser on fuser.user_id = userRelation.user_id
        <trim prefixOverrides="AND | OR" suffixOverrides="AND | OR">
            <where>
                <include refid="Base_Example_Where_Clause">
                    <property name="replace" value="task"/>
                </include>
            </where>
        </trim>
    </select>

    <select id="selectPlanByTask" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List">
            <property name="replace" value="task"/>
        </include>
        ,
        <include refid="Plan_Column_List">
            <property name="replace" value="plan"/>
            <property name="prefix" value="plan_"/>
        </include>
        from fruits_task task
        RIGHT join (select task_id,plan_id from task_plan_relation where is_deleted = 'N') planRelation on planRelation.task_id = task.uuid
        RIGHT join (select <include refid="plan_Base_Column_List"/> from fruits_plan where is_deleted = 'N') plan on planRelation.plan_id = plan.uuid
        <trim prefixOverrides="AND | OR" suffixOverrides="AND | OR">
            <where>
                <include refid="Base_Example_Where_Clause">
                    <property name="replace" value="task"/>
                </include>
            </where>
        </trim>
    </select>

    <!-- 查询任务关联项目 -->
    <select id="selectProjectByTask" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List">
            <property name="replace" value="task"/>
        </include>
        ,
        <include refid="Project_Column_List">
            <property name="replace" value="project"/>
            <property name="prefix" value="project_"/>
        </include>
        from fruits_task task
        RIGHT join (select task_id,project_id from task_project_relation where is_deleted = 'N') projectRelation on projectRelation.task_id = task.uuid
        RIGHT join (select <include refid="Project_Base_Column_List"/> from fruits_project where is_deleted = 'N') project on project.uuid = projectRelation.project_id
        <trim suffixOverrides="AND | OR" prefixOverrides="AND | OR ">
            <where>
                <include refid="Base_Example_Where_Clause">
                    <property name="replace" value="task"/>
                </include>
            </where>
        </trim>
    </select>

    <!-- 根据关联计划，查询出任务关联项目 -->
    <select id="selectPlanJoinProjectByTask" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List">
            <property name="replace" value="task"/>
        </include>
        ,
        <include refid="Project_Column_List">
            <property name="replace" value="project"/>
            <property name="prefix" value="project_"/>
        </include>
        from fruits_task task
        RIGHT join (select task_id,plan_id from task_plan_relation where is_deleted = 'N') planRelation on planRelation.task_id = task.uuid
        RIGHT join (select plan_id,project_id from plan_project_relation where is_deleted = 'N') projectRelation on projectRelation.plan_id = planRelation.plan_id
        RIGHT join (select <include refid="Project_Base_Column_List"/> from fruits_project where is_deleted = 'N') project on project.uuid = projectRelation.project_id
        <trim suffixOverrides="AND | OR" prefixOverrides="AND | OR ">
            <where>
                <include refid="Base_Example_Where_Clause">
                    <property name="replace" value="task"/>
                </include>
            </where>
        </trim>
    </select>

    <select id="selectJoinLogsByTask" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List">
            <property name="replace" value="task"/>
        </include>
        ,
        <include refid="Logs_Column_List">
            <property name="replace" value="flogs"/>
            <property name="prefix" value="flogs_"/>
        </include>
        FROM
        fruits_task task
        right join (select uuid, user_id, fruit_uuid, json_object, fruit_type, operate_type, modify_date_time, create_date_time,
        is_deleted from fruits_logs where fruit_type = 'TASK' and is_deleted = 'N') flogs on flogs.fruit_uuid = task.uuid
        <trim suffixOverrides="AND | OR" prefixOverrides="AND | OR ">
            <where>
                <include refid="Base_Example_Where_Clause">
                    <property name="replace" value="task"/>
                </include>
            </where>
        </trim>
        ORDER by flogs.create_date_time DESC
    </select>

    <!--根据任务查询列表-->
    <select id="selectListByTask" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List">
            <property name="replace" value="task"/>
        </include>
        ,
        <include refid="List_Column_List">
            <property name="replace" value="flist"/>
            <property name="prefix" value="list_"/>
        </include>
        from fruits_task task
        left join (select task_id,list_id from task_list_relation where is_deleted = 'N') listJoin on listJoin.task_id = task.uuid
        left join (select uuid, title, l_type, description, modify_date_time, create_date_time, is_deleted from fruits_list where is_deleted = 'N') flist on flist.uuid = listJoin.list_id
        <trim suffixOverrides="AND | OR" prefixOverrides="AND | OR ">
            <where>
                <include refid="Base_Example_Where_Clause">
                    <property name="replace" value="task"/>
                </include>
            </where>
        </trim>
    </select>


    <!--/************************************************************************************************-->
    <!--*                                       个人中心专供                                            *-->
    <!--************************************************************************************************/-->

    <select id="myTaskByExample" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List">
            <property name="replace" value="task"/>
        </include>
        FROM
        fruits_task task
        left join
        (
            select task_id,user_id from task_user_relation
            where
              is_deleted='N' and user_id = #{userId}
        ) userRelation on userRelation.task_id = task.uuid
        left join (select task_id,project_id from task_project_relation where is_deleted='N') projectJoin on task.uuid = projectJoin.task_id
        left join (select task_id,plan_id from task_plan_relation where is_deleted='N') planJoin on planJoin.task_id = task.uuid
        left join (select plan_id,project_id from plan_project_relation where is_deleted='N') planProjectRelation on planProjectRelation.plan_id = planJoin.plan_id
        left join
        (
          select uuid from fruits_project
          where
            is_deleted='N'
            <if test="projectId != null">
                and uuid = #{projectId}
            </if>
        ) fproject on fproject.uuid = planProjectRelation.project_id or fproject.uuid = projectJoin.project_id
        <trim prefixOverrides="AND | OR" suffixOverrides="AND | OR">
            <where>
                <include refid="Base_Example_Where_Clause">
                    <property name="replace" value="task"/>
                </include>
                and fproject.uuid is not null
            </where>
        </trim>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>

    <select  id="myCreateTask" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List">
            <property name="replace" value="task"/>
        </include>
        FROM
        fruits_task task
        inner join
        (select `user_id`,`fruit_uuid` from fruits_logs
        where fruit_type = 'TASK' and `operate_type` = 'ADD' and is_deleted = 'N'
        AND user_id = #{userId}) flogs on flogs.fruit_uuid = task.uuid
        <trim prefixOverrides="AND | OR" suffixOverrides="AND | OR">
            <where>
                <include refid="Base_Example_Where_Clause">
                    <property name="replace" value="task"/>
                </include>
            </where>
        </trim>
        <if test="example.orderByClause != null">
            order by ${example.orderByClause}
        </if>
    </select>


</mapper>