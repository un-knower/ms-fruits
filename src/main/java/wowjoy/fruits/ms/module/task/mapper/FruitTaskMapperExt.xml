<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wowjoy.fruits.ms.module.task.mapper.FruitTaskMapperExt">
    <resultMap id="BaseProjectResultMap" type="wowjoy.fruits.ms.module.task.FruitTaskDao">
        <collection resultMap="ProjectResultMap" property="fruitProjects"
                    columnPrefix="project_">
        </collection>
    </resultMap>

    <resultMap id="BasePlanResultMap" type="wowjoy.fruits.ms.module.task.FruitTaskDao">
        <collection resultMap="PlanResultMap" property="fruitPlans"
                    columnPrefix="plan_">
        </collection>
    </resultMap>
    <resultMap id="ProjectResultMap" type="wowjoy.fruits.ms.module.project.FruitProjectDao">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do updatedify.
          This element was generated on Wed Sep 06 11:36:15 CST 2017.
        -->
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="project_status" jdbcType="VARCHAR" property="projectStatus"/>
        <result column="predict_end_date" jdbcType="DATE" property="predictEndDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do updatedify.
          This element was generated on Tue Oct 10 15:00:28 CST 2017.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${replace}.${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${replace}.${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${replace}.${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${replace}.${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Project_Column_List">
        ${replace}.${prefix}uuid,
        ${replace}.${prefix}title,
        ${replace}.${prefix}project_status,
        ${replace}.${prefix}predict_end_date,
        ${replace}.${prefix}end_date,
        ${replace}.${prefix}description,
        ${replace}.${prefix}modify_date_time,
        ${replace}.${prefix}create_date_time,
        ${replace}.${prefix}is_deleted
    </sql>
    <sql id="Plan_Column_List">
        ${replace}.${prefix}uuid,
        ${replace}.${prefix}title,
        ${replace}.${prefix}plan_status,
        ${replace}.${prefix}status_description,
        ${replace}.${prefix}percent,
        ${replace}.${prefix}estimated_end_date,
        ${replace}.${prefix}end_date,
        ${replace}.${prefix}parent_id,
        ${replace}.${prefix}modify_date_time,
        ${replace}.${prefix}create_date_time,
        ${replace}.${prefix}is_deleted
    </sql>
    <select id="relationProjectByExample" parameterType="wowjoy.fruits.ms.module.task.FruitTaskExample"
            resultMap="BaseProjectResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Project_Column_List">
            <property name="replace" value="project"/>
            <property name="prefix" value="project_"/>
        </include>
        from fruits_task task
        LEFT JOIN (task_project_relation tpr,fruits_project project) on tpr.task_id = task.uuid and tpr.project_id =
        project.uuid
        <if test="_parameter != null">
            <include refid="Example_Where_Clause">
                <property name="replace" value="project"/>
            </include>
        </if>
        <if test="orderByClause != null">
            order by task.${orderByClause}
        </if>
    </select>

    <select id="relationPlanByExample" parameterType="wowjoy.fruits.ms.module.task.FruitTaskExample"
            resultMap="BaseProjectResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Plan_Column_List">
            <property name="replace" value="plan"/>
            <property name="prefix" value="plan_"/>
        </include>
        from fruits_task task
        LEFT JOIN (task_plan_relation tpr,fruits_plan plan) on tpr.task_id = task.uuid and tpr.plan_id = plan.uuid
        <if test="_parameter != null">
            <include refid="Example_Where_Clause">
                <property name="replace" value="plan"/>
            </include>
        </if>
        <if test="orderByClause != null">
            order by task.${orderByClause}
        </if>
    </select>
</mapper>