<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wowjoy.fruits.ms.module.plan.mapper.FruitPlanMapperExt">
    <resultMap id="BaseResultMap" type="wowjoy.fruits.ms.module.plan.FruitPlan">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="plan_status" jdbcType="VARCHAR" property="planStatus"/>
        <result column="percent" jdbcType="INTEGER" property="percent"/>
        <result column="estimated_start_date" jdbcType="TIMESTAMP" property="estimatedStartDate"/>
        <result column="estimated_end_date" jdbcType="TIMESTAMP" property="estimatedEndDate"/>
        <result column="start_date" jdbcType="TIMESTAMP" property="startDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
        <result column="task_id" jdbcType="VARCHAR" property="taskId"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="wowjoy.fruits.ms.module.plan.FruitPlan">
        <result column="description" jdbcType="LONGVARCHAR" property="description"/>
    </resultMap>
    <resultMap id="UserResultMap" type="wowjoy.fruits.ms.module.plan.FruitPlanUser">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="user_sex" jdbcType="VARCHAR" property="userSex"/>
        <result column="job_title" jdbcType="VARCHAR" property="jobTitle"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
        <!-- 扩展字段 -->
        <result column="pu_role" jdbcType="VARCHAR" property="planRole"/>
        <result column="plan_id" jdbcType="VARCHAR" property="planId"/>

    </resultMap>

    <resultMap id="PlanResultMap" type="wowjoy.fruits.ms.module.task.FruitTaskPlan">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="plan_status" jdbcType="VARCHAR" property="planStatus"/>
        <result column="status_description" jdbcType="VARCHAR" property="statusDescription"/>
        <result column="percent" jdbcType="INTEGER" property="percent"/>
        <result column="estimated_start_date" jdbcType="TIMESTAMP" property="estimatedStartDate"/>
        <result column="estimated_end_date" jdbcType="TIMESTAMP" property="estimatedEndDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="parent_id" jdbcType="VARCHAR" property="parentId"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
        <result column="task_id" jdbcType="VARCHAR" property="taskId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${replace}.${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${replace}.${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${replace}.${criterion.condition} #{criterion.value} and
                                #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${replace}.${criterion.condition}
                                <foreach close=")" collection="criterion.value" item="listItem" open="("
                                         separator=",">
                                    #{listItem}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </foreach>
    </sql>
    <sql id="Base_Column_List">
        ${replace}.uuid,
        ${replace}.title,
        ${replace}.plan_status,
        ${replace}.percent,
        ${replace}.start_date,
        ${replace}.end_date,
        ${replace}.estimated_start_date,
        ${replace}.estimated_end_date,
        ${replace}.parent_id,
        ${replace}.modify_date_time,
        ${replace}.create_date_time,
        ${replace}.is_deleted,
        ${replace}.description
    </sql>
    <sql id="User_Column_List">
        ${replace}.uuid as ${prefix}uuid,
        ${replace}.user_id as ${prefix}user_id,
        ${replace}.user_name as ${prefix}user_name,
        ${replace}.status as ${prefix}status,
        ${replace}.birthday as ${prefix}birthday,
        ${replace}.user_email as ${prefix}user_email,
        ${replace}.user_sex as ${prefix}user_sex,
        ${replace}.job_title as ${prefix}job_title,
        ${replace}.description as ${prefix}description,
        ${replace}.modify_date_time as ${prefix}modify_date_time,
        ${replace}.create_date_time as ${prefix}create_date_time,
        ${replace}.is_deleted as ${prefix}is_deleted
    </sql>
    <sql id="Task_Column_List">
        ${replace}.uuid as ${prefix}uuid,
        ${replace}.title as ${prefix}title,
        ${replace}.task_status as ${prefix}task_status,
        ${replace}.status_description as ${prefix}status_description,
        ${replace}.task_level as ${prefix}task_level,
        ${replace}.estimated_end_date as ${prefix}estimated_end_date,
        ${replace}.end_date as ${prefix}end_date,
        ${replace}.description as ${prefix}description,
        ${replace}.modify_date_time as ${prefix}modify_date_time,
        ${replace}.create_date_time as ${prefix}create_date_time,
        ${replace}.is_deleted as ${prefix}is_deleted
    </sql>
    <select id="selectByProjectId" parameterType="wowjoy.fruits.ms.module.plan.example.FruitPlanExample"
            resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List">
            <property name="replace" value="plan"/>
        </include>
        from fruits_plan plan
        right join (select plan_id,project_id from plan_project_relation where project_id = #{projectId} and is_deleted
        = 'N')
        ppr on ppr.plan_id = plan.uuid
        <if test="example != null">
            <trim suffixOverrides="AND | OR" prefixOverrides="AND | OR">
                <where>
                    <include refid="Example_Where_Clause">
                        <property name="replace" value="plan"/>
                    </include>
                    and plan.uuid is not null
                </where>
            </trim>
        </if>
        <if test="example.orderByClause != null">
            order by plan.${example.orderByClause}
        </if>
    </select>

    <select id="selectUserByPlanIds" resultMap="UserResultMap">
        select
        <include refid="User_Column_List">
            <property name="replace" value="fuser"/>
            <property name="prefix" value=""/>
        </include>
        ,
        userSon.pu_role,
        userSon.plan_id
        from (
        select userJoin.pu_role,userJoin.user_id,userJoin.plan_id from fruits_plan fplan
        right join (select pu_role,user_id,plan_id from plan_user_relation where is_deleted = 'N') userJoin on
        userJoin.plan_id = fplan.uuid
        <where>
            fplan.uuid in
            <foreach collection="planIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
            and fplan.is_deleted = 'N'
        </where>
        group by userJoin.pu_role,userJoin.user_id,userJoin.plan_id
        ) userSon
        left join (
        select
        <include refid="User_Column_List">
            <property name="replace" value="fuser"/>
            <property name="prefix" value=""/>
        </include>
        from fruits_user fuser where fuser.is_deleted = 'N') fuser on fuser.user_id = userSon.user_id
        <where>
            fuser.user_id is not null
            and fuser.is_deleted = 'N'
        </where>
        order by fuser.user_id = #{userId} desc
    </select>

    <select id="selectUserByPlanExampleAndUserIdOrProjectId" resultMap="UserResultMap">
        select
        <include refid="User_Column_List">
            <property name="replace" value="fuser"/>
            <property name="prefix" value=""/>
        </include>
        ,
        userSon.plan_id,userSon.pu_role
        from (
        select planJoin.pu_role,planJoin.user_id,planJoin.plan_id,projectJoin.project_id from plan_user_relation
        planJoin
        right join (select plan_id,project_id from plan_project_relation
        <trim prefixOverrides="AND | OR" suffixOverrides="AND | OR">
            <where>
                <if test="projectId != null">
                    project_id = #{projectId}
                </if>
                and is_deleted = 'N'
            </where>
        </trim>
        ) projectJoin on projectJoin.plan_id = planJoin.plan_id
        right join (select uuid from fruits_plan fplan
        <trim prefixOverrides="AND | OR" suffixOverrides="AND | OR">
            <where>
                <include refid="Example_Where_Clause">
                    <property name="replace" value="fplan"/>
                </include>
                and is_deleted = 'N'
            </where>
        </trim>
        ) fplan on fplan.uuid = projectJoin.plan_id
        <where>
            planJoin.user_id in
            <foreach collection="userIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
            and planJoin.is_deleted = 'N'
        </where>
        group by planJoin.pu_role,planJoin.user_id,planJoin.plan_id,projectJoin.project_id
        ) userSon
        left join (
        select
        <include refid="User_Column_List">
            <property name="replace" value="fuser"/>
            <property name="prefix" value=""/>
        </include>
        from fruits_user fuser where fuser.is_deleted = 'N') fuser on fuser.user_id = userSon.user_id
        where fuser.user_id is not null
    </select>

    <select id="selectPlanByTask" resultMap="PlanResultMap">
        select
        <include refid="Base_Column_List">
            <property name="replace" value="fplan"/>
        </include>
        ,taskJoin.task_id
        from fruits_plan fplan
        right join (select task_id,plan_id from task_plan_relation where is_deleted = 'N') taskJoin on taskJoin.plan_id
        = fplan.uuid
        right join (select ftask.uuid from fruits_task ftask
        <where>
            ftask.uuid in
            <foreach collection="taskIn" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
            and ftask.is_deleted = 'N'
        </where>
        ) ftask on ftask.uuid = taskJoin.task_id
        where fplan.uuid is not null and fplan.is_deleted = 'N';
    </select>
</mapper>