<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wowjoy.fruits.ms.module.project.mapper.FruitProjectMapperExt">
    <resultMap id="BaseResultMap" type="wowjoy.fruits.ms.module.project.FruitProjectDao">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="project_status" jdbcType="VARCHAR" property="projectStatus"/>
        <result column="status_description" jdbcType="VARCHAR" property="statusDescription"/>
        <result column="predict_start_date" jdbcType="DATE" property="predictStartDate"/>
        <result column="predict_end_date" jdbcType="DATE" property="predictEndDate"/>
        <result column="end_date" jdbcType="TIMESTAMP" property="endDate"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
    </resultMap>
    <resultMap id="UserResultMap" type="wowjoy.fruits.ms.module.project.FruitProjectUser">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="user_id" jdbcType="VARCHAR" property="userId"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="birthday" jdbcType="TIMESTAMP" property="birthday"/>
        <result column="user_email" jdbcType="VARCHAR" property="userEmail"/>
        <result column="user_sex" jdbcType="VARCHAR" property="userSex"/>
        <result column="job_title" jdbcType="VARCHAR" property="jobTitle"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
        <!-- 扩展字段 -->
        <result column="up_role" jdbcType="VARCHAR" property="projectRole"/>
        <result column="project_id" jdbcType="VARCHAR" property="projectId"/>
    </resultMap>
    <resultMap id="TeamResultMap" type="wowjoy.fruits.ms.module.project.FruitProjectTeam">
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="VARCHAR" property="isDeleted"/>
        <!-- 扩展字段 -->
        <result column="tp_role" jdbcType="VARCHAR" property="projectRole"/>
        <result column="project_id" jdbcType="VARCHAR" property="projectId"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do updatedify.
          This element was generated on Wed Sep 06 11:36:16 CST 2017.
        -->
        <foreach collection="example.oredCriteria" item="criteria" separator="or">
            <if test="criteria.valid">
                <trim prefix="(" prefixOverrides="and" suffix=")">
                    <foreach collection="criteria.criteria" item="criterion">
                        <choose>
                            <when test="criterion.noValue">
                                and ${replace}.${criterion.condition}
                            </when>
                            <when test="criterion.singleValue">
                                and ${replace}.${criterion.condition} #{criterion.value}
                            </when>
                            <when test="criterion.betweenValue">
                                and ${replace}.${criterion.condition} #{criterion.value} and
                                #{criterion.secondValue}
                            </when>
                            <when test="criterion.listValue">
                                and ${replace}.${criterion.condition}
                                <foreach close=")" collection="criterion.value" item="listItem" open="("
                                         separator=",">
                                    #{listItem}
                                </foreach>
                            </when>
                        </choose>
                    </foreach>
                </trim>
            </if>
        </foreach>
    </sql>
    <sql id="Base_Column_List">
        ${replace}.uuid,
        ${replace}.title,
        ${replace}.project_status,
        ${replace}.status_description,
        ${replace}.predict_start_date,
        ${replace}.predict_end_date,
        ${replace}.end_date,
        ${replace}.description,
        ${replace}.modify_date_time,
        ${replace}.create_date_time,
        ${replace}.is_deleted
    </sql>
    <sql id="User_Column_List">
        ${replace}.uuid as ${prefix}uuid,
        ${replace}.user_id as ${prefix}user_id,
        ${replace}.user_name as ${prefix}user_name,
        ${replace}.status as ${prefix}status,
        ${replace}.birthday as ${prefix}birthday,
        ${replace}.user_email as ${prefix}user_email,
        ${replace}.user_sex as ${prefix}user_sex,
        ${replace}.job_title as ${prefix}job_title,
        ${replace}.description as ${prefix}description,
        ${replace}.modify_date_time as ${prefix}modify_date_time,
        ${replace}.create_date_time as ${prefix}create_date_time,
        ${replace}.is_deleted as ${prefix}is_deleted
    </sql>
    <sql id="team_Column_List">
        ${replace}.uuid as ${prefix}uuid,
        ${replace}.title as ${prefix}title,
        ${replace}.description as ${prefix}description,
        ${replace}.modify_date_time as ${prefix}modify_date_time,
        ${replace}.create_date_time as ${prefix}create_date_time,
        ${replace}.is_deleted as ${prefix}is_deleted
    </sql>

    <select id="selectUserByProjectIdAndRole" resultMap="UserResultMap">
        select
        <include refid="User_Column_List">
            <property name="replace" value="fuser"/>
            <property name="prefix" value=""/>
        </include>
        ,
        userJoin.up_role,
        userJoin.project_id
        from (
        select userJoin.user_id,userJoin.project_id,userJoin.up_role from user_project_relation userJoin
        <where>
            userJoin.project_id in
            <foreach collection="projectIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
            and
            userJoin.up_role in 
            <foreach collection="userRoles" open="(" close=")" separator="," item="role">
                #{role}
            </foreach>
            and
            userJoin.is_deleted = 'N'
        </where>
        group by userJoin.user_id,userJoin.project_id,userJoin.up_role
        ) userJoin
        left join (select
        <include refid="User_Column_List">
            <property name="replace" value="fuser"/>
            <property name="prefix" value=""/>
        </include>
        from fruits_user fuser
        ) fuser on fuser.user_id =
        userJoin.user_id
        where fuser.user_id is not null
    </select>

    <select id="selectTeamByProjectId" resultMap="TeamResultMap">
        select
        <include refid="team_Column_List">
            <property name="replace" value="fteam"/>
            <property name="prefix" value=""/>
        </include>
        ,
        teamJoin.project_id,teamJoin.tp_role
        from (
        select teamJoin.project_id,teamJoin.team_id,teamJoin.tp_role from project_team_relation teamJoin
        <where>
            teamJoin.project_id in
            <foreach collection="projectIds" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
            and teamJoin.is_deleted = 'N'
        </where>
        group by teamJoin.project_id,teamJoin.team_id,teamJoin.tp_role
        ) teamJoin
        left join (select
        <include refid="team_Column_List">
            <property name="replace" value="fteam"/>
            <property name="prefix" value=""/>
        </include>
        from fruits_team fteam where fteam.is_deleted = 'N') fteam on fteam.uuid = teamJoin.team_id
        where fteam.uuid is not null
    </select>
    <select id="selectByUserIdAndExample" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List">
            <property name="replace" value="fproject"/>
        </include>
        from (select
        <include refid="Base_Column_List">
            <property name="replace" value="fproject"/>
        </include>
        from fruits_project fproject
        right join (select team_id,project_id from project_team_relation where is_deleted = 'N') teamJoin on
        teamJoin.project_id = fproject.uuid
        right join (select team_id,user_id from user_team_relation where user_id = #{userId} and is_deleted = 'N')
        userJoin on userJoin.team_id = teamJoin.team_id
        where fproject.is_deleted = 'N' and fproject.uuid is not null
        union
        select
        <include refid="Base_Column_List">
            <property name="replace" value="fproject"/>
        </include>
        from fruits_project fproject
        right join (select user_id,project_id from user_project_relation where user_id = #{userId} and is_deleted = 'N')
        userJoin on userJoin.project_id = fproject.uuid
        where fproject.is_deleted = 'N' and fproject.uuid is not null) fproject
        <trim prefixOverrides="AND | OR" suffixOverrides="AND | OR">
            <where>
                <include refid="Example_Where_Clause">
                    <property name="replace" value="fproject"/>
                </include>
            </where>
        </trim>
    </select>

    <select id="selectAllUserByProjectId" resultMap="UserResultMap">
        select userId.user_id
        from (
        select userJoin.user_id
        from user_team_relation userJoin
        right join
        (select team_id from project_team_relation
        <where>
            project_id = #{projectId}
            and is_deleted = 'N'
        </where>
        ) projectJoin on projectJoin.team_id = userJoin.team_id
        where userJoin.is_deleted = 'N'
        group by userJoin.user_id,userJoin.team_id
        union all
        select userJoin.user_id from user_project_relation userJoin
        <trim suffixOverrides="AND | OR" prefixOverrides="AND | OR">
            <where>
                userJoin.project_id = #{projectId}
                and userJoin.is_deleted = 'N'
            </where>
        </trim>
        group by userJoin.user_id,userJoin.up_role
        ) userId
    </select>
</mapper>