<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="wowjoy.fruits.ms.module.defect.mapper.FruitDefectMapperExt">
    <resultMap id="BaseResultMap" type="wowjoy.fruits.ms.module.defect.FruitDefect">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri May 04 11:04:39 CST 2018.
        -->
        <result column="uuid" jdbcType="CHAR" property="uuid"/>
        <result column="number" jdbcType="INTEGER" property="number"/>
        <result column="project_id" jdbcType="CHAR" property="projectId"/>
        <result column="before_version_id" jdbcType="CHAR" property="beforeVersionId"/>
        <result column="after_version_id" jdbcType="CHAR" property="afterVersionId"/>
        <result column="defect_name" jdbcType="VARCHAR" property="defectName"/>
        <result column="user_id" jdbcType="CHAR" property="userId"/>
        <result column="handler_user_id" jdbcType="CHAR" property="handlerUserId"/>
        <result column="defect_type" jdbcType="VARCHAR" property="defectType"/>
        <result column="defect_level" jdbcType="VARCHAR" property="defectLevel"/>
        <result column="risk_index" jdbcType="VARCHAR" property="riskIndex"/>
        <result column="defect_status" jdbcType="VARCHAR" property="defectStatus"/>
        <result column="end_date_time" jdbcType="TIMESTAMP" property="endDateTime"/>
        <result column="closed_date_time" jdbcType="TIMESTAMP" property="closedDateTime"/>
        <result column="duplicate" jdbcType="VARCHAR" property="duplicate"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="CHAR" property="isDeleted"/>
    </resultMap>

    <resultMap id="DefectDuplicate" type="wowjoy.fruits.ms.module.defect.DefectDuplicate">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Fri May 04 11:04:39 CST 2018.
        -->
        <result column="uuid" jdbcType="CHAR" property="uuid"/>
        <result column="number" jdbcType="INTEGER" property="number"/>
        <result column="project_id" jdbcType="CHAR" property="projectId"/>
        <result column="before_version_id" jdbcType="CHAR" property="beforeVersionId"/>
        <result column="after_version_id" jdbcType="CHAR" property="afterVersionId"/>
        <result column="defect_name" jdbcType="VARCHAR" property="defectName"/>
        <result column="user_id" jdbcType="CHAR" property="userId"/>
        <result column="handler_user_id" jdbcType="CHAR" property="handlerUserId"/>
        <result column="defect_type" jdbcType="VARCHAR" property="defectType"/>
        <result column="defect_level" jdbcType="VARCHAR" property="defectLevel"/>
        <result column="risk_index" jdbcType="VARCHAR" property="riskIndex"/>
        <result column="defect_status" jdbcType="VARCHAR" property="defectStatus"/>
        <result column="end_date_time" jdbcType="TIMESTAMP" property="endDateTime"/>
        <result column="duplicate" jdbcType="VARCHAR" property="duplicate"/>
        <result column="modify_date_time" jdbcType="TIMESTAMP" property="modifyDateTime"/>
        <result column="create_date_time" jdbcType="TIMESTAMP" property="createDateTime"/>
        <result column="is_deleted" jdbcType="CHAR" property="isDeleted"/>

        <result column="handlerUserName" jdbcType="VARCHAR" property="handlerUserName"/>
        <result column="createUserName" jdbcType="VARCHAR" property="createUserName"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="wowjoy.fruits.ms.module.defect.FruitDefect">
        <result column="description" jdbcType="LONGVARCHAR" property="description"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Apr 25 13:53:25 CST 2018.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    uuid, number, project_id, before_version_id, after_version_id, defect_name, user_id,
    handler_user_id, defect_type, defect_level, risk_index, defect_status, end_date_time,
    duplicate, modify_date_time, create_date_time, is_deleted
  </sql>
    <sql id="Blob_Column_List">
    description
  </sql>
    <select id="selectDuplicate" resultMap="DefectDuplicate">
        select defect.uuid,defect.number,handlerUser.user_name as handlerUserName,createUser.user_name as createUserName,defect.defect_name from fruits_defect defect
        left join (select user_name,user_id from fruits_user where is_deleted = 'N') createUser on createUser.user_id = defect.user_id
        left join (select user_name,user_id from fruits_user where is_deleted = 'N') handlerUser on handlerUser.user_id = defect.handler_user_id
        where defect.uuid = #{uuid} and is_deleted = 'N'
    </select>
    <!--index sql:
    ALTER table fruits_defect add index cover_list (
    risk_index,defect_level,defect_type,defect_status,`is_deleted`,
    `handler_user_id`,`user_id`,before_version_id,project_id,
    `defect_name`,duplicate,create_date_time,`end_date_time`,`closed_date_time`
    );-->
    <select id="selectByExampleExt" resultMap="BaseResultMap">
        select
        uuid,number,
        risk_index,defect_level,defect_type,defect_status,
        case
        when risk_index = 'DEADLY' then 6
        when risk_index = 'SERIOUS' then 5
        when risk_index = 'IMPORTANT' then 4
        when risk_index = 'COMMON' then 3
        when risk_index = 'SLIGHT' then 2
        when risk_index = 'IMPROVE' then 1
        else -1 end
        as `index`,
        case
        when defect_level = 'EMERGENCY' then 5
        when defect_level = 'HIGH' then 4
        when defect_level = 'CENTER' then 3
        when defect_level = 'LOW' then 2
        when defect_level = 'IRRELEVANT' then 1
        else -1 end
        as `level`,
        case
        when defect_type = 'FUNCTION' then 1
        when defect_type = 'REQUIREMENT' then 2
        when defect_type = 'DESIGN' then 3
        when defect_type = 'DATA' then 4
        when defect_type = 'PERFORMANCE' then 5
        when defect_type = 'COMPATIBLE' then 6
        when defect_type = 'SAFETY' then 7
        when defect_type = 'ADVICE' then 8
        when defect_type = 'OTHER' then 9
        else -1 end
        as `type`,
        case
        when defect_status = 'NEW' then 1
        when defect_status = 'REOPEN' then 2
        when defect_status = 'DELAY' then 3
        when defect_status = 'DISREGARD' then 4
        when defect_status = 'SOLVED' then 5
        when defect_status = 'CLOSED' then 6
        else -1 end
        as `status`,
        `is_deleted`, -- 常数
        `handler_user_id`,`user_id`,before_version_id,project_id, -- 不会使用范围查询的字段
        `defect_name`,duplicate,create_date_time,`end_date_time`,`closed_date_time` -- 范围查询
        from fruits_defect fdefect
        where
        `risk_index` in -- 此处是索引常数项，不允许为空
        <foreach collection="indexIn" item="index" open="(" close=")" separator=",">
            #{index}
        </foreach>
        and `defect_level` in -- 此处是索引常数项，不允许为空
        <foreach collection="levelIn" item="level" open="(" close=")" separator=",">
            #{level}
        </foreach>
        and `defect_type` in -- 此处是索引常数项，不允许为空
        <foreach collection="typeIn" item="type" open="(" close=")" separator=",">
            #{type}
        </foreach>
        and `defect_status` in -- 此处是索引常数项，不允许为空
        <foreach collection="statusIn" item="status" open="(" close=")" separator=",">
            #{status}
        </foreach>
        and `is_deleted` = 'N'
        <if test="handlerUserIdIn != null">
            and `handler_user_id` in
            <foreach collection="handlerUserIdIn" item="handlerUserId" open="(" close=")" separator=",">
                #{handlerUserId}
            </foreach>
        </if>
        <if test="userIdIn != null">
            and `user_id` in
            <foreach collection="userIdIn" item="userId" open="(" close=")" separator=",">
                #{userId}
            </foreach>
        </if>
        <if test="beforeVersionIdIn != null">
            and `before_version_id` in
            <foreach collection="beforeVersionIdIn" item="beforeVersionId" open="(" close=")" separator=",">
                #{beforeVersionId}
            </foreach>
        </if>
        <if test="projectIdIn != null">
            and `project_id` in
            <foreach collection="projectIdIn" item="projectId" open="(" close=")" separator=",">
                #{projectId}
            </foreach>
        </if>
        <if test="defectName != null">
            and `defect_name` like #{defectName}
        </if>
        <if test="duplicate != null">
            and duplicate like #{duplicate}
        </if>
        <choose>
            <when test="startTime != null and endTime != null">
                and `create_date_time` between #{startTime} and #{endTime}
            </when>
            <when test="endTime != null">
                and `create_date_time` &lt; #{endTime}
            </when>
        </choose>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
</mapper>